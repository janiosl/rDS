source("~/.active-rstudio-document", echo=TRUE)
install.packages("tidyverse")
source("~/.active-rstudio-document", echo=TRUE)
ggsave("diamonds.pdf")
write_csv(diamonds, "diamonds.csv")
library(tidyverse)
as_tibble(iris)
tibble(x = 1:5,
y = 1,
z = x ^ 2 + y)
#Criar tible com colunas com nomes incomuns
tb <- tibble(':)' = "smile",
' ' = "space",
'2000' = "number")
tb
View(tb)
#Criar tible por código
tribble(
~x, ~y, ~z,
"a", 2, 3.6
"b", 1, 8.5
?tribble
#Criar tible por código
tribble(
~x, ~y, ~z,
#--/--/----
"a", 2, 3.6,
"b", 1, 8.5
)
View(tb)
#Criar tible por código
trb <- tribble(
~x, ~y, ~z,
#--/--/----
"a", 2, 3.6,
"b", 1, 8.5
)
trb
View(trb)
?runif
tibble(
a = lubridate::now() + runif(1e3) * 86400,
b = lubridate::today() + runif(1e3) * 30,
c = 1:1e3,
d = runif(1e3),
c = sample(letters, 1e3, replace = TRUE)
)
tibble(
a = lubridate::now() + runif(1e3) * 86400,
b = lubridate::today() + runif(1e3) * 30,
c = 1:1e3,
d = runif(1e3),
e = sample(letters, 1e3, replace = TRUE)
)
ex <- tibble(
a = lubridate::now() + runif(1e3) * 86400,
b = lubridate::today() + runif(1e3) * 30,
c = 1:1e3,
d = runif(1e3),
e = sample(letters, 1e3, replace = TRUE)
)
ex
print(x)
print(ex)
print(ex, n = 20, width = 3)
print(ex, n = 50, width = 3)
ex %>%
print(n = 50, width = 3)
View(ex)
ex %>%
print(n = 50, width = Inf)
ex %>%
print(n = 50, width = 30)
ex %>%
print(n = 50, width = Inf)
nycflights13::fligths
install.packages("nycflights13")
nycflights13::fligths
nycflights13::flights
#Organização da visualização
nycflights13::flights %>%
print(n = 10, width = Inf)
##===========================
##Subconjuntos
##===========================
df <- tibble(
x = runif(5),
Y = runif(5)
)
df
df$x
df$y
df$Y
##===========================
##Subconjuntos
##===========================
df <- tibble(
x = runif(5),
y = runif(5)
)
df
df$x
df$y
df[["x"]]
df[[1]]
#Filtros dentro de um pipe
df %>% .$x
df %>% .$y
df %>% .[[1]]
##===========================
##Converter em data.frame
##===========================
as.data.frame(df)
class(as.data.frame(df))
class(df)
library(tidyverse)
library(tidyverse)
heights <- read_csv("data/heights.csv")
library(readr)
heights <- read_csv("data/heights.csv")
View(heights)
heights
read_csv(
"a,b,c
1,2,3
4,5,6"
)
source("~/GitHub/rDS/r4ds/rds_0_prepration.r", echo=TRUE)
source("~/GitHub/rDS/r4ds/rds_cap01_vis_ggplot2.r", echo=TRUE)
source("~/GitHub/rDS/r4ds/rds_cap03_transf_dplyr_pipe.r", echo=TRUE)
source("~/GitHub/rDS/r4ds/rds_cap03_transf_dplyr.r", echo=TRUE)
source("~/GitHub/rDS/r4ds/rds_cap05_an_explor.r", echo=TRUE)
source("~/GitHub/rDS/r4ds/rds_cap07_tibble.R", echo=TRUE)
source("~/GitHub/rDS/r4ds/rds_cap08_data_readr.R", echo=TRUE)
meta <- read_csv("metadados.csv",
skip = 2)
library(tidyverse)
library(readr)
heights <- read_csv("data/heights.csv")
heights
read_csv(
"a,b,c
1,2,3
4,5,6"
)
meta <- read_csv("metadados.csv",
skip = 2)
meta
comments <- read_csv("comments.csv",
comment = "#")
comments
noTitle <- read_csv("noTitle.csv",
col_names = FALSE)
noTitle
putTitle <- read_csv("noTitle.csv",
col_names = c("x", "y", "z"))
putTitle
read_csv("a,b,c\n1,2,.")
#Com tratamento
read_csv("a,b,c\n1,2,.", na = ".")
read_csv("a,b,c\n1,2,-", na = "-")
read_csv("a,b,c\n1,2,-")
#Tratamento de valores ausentes
#Sem tratamento
read_csv("a,b,c\n1,2,.")
read_csv("a,b,c\n1,2,-")
#Tratamento de valores ausentes
#Sem tratamento
read_csv("a,b,c\n1,2,.")
read_csv("a,b,c\n1,2,-")
#Com tratamento
read_csv("a,b,c\n1,2,.", na = ".")
read_csv("a,b,c\n1,2,-", na = "-")
300
300-146
154-88
66-38
##========================
##Analisando vetor
##========================
str(parse_logical("TRUE", "FALSE", "NA"))
source("~/GitHub/rDS/r4ds/rds_cap08_data_readr.R", echo=TRUE)
##========================
##Analisando vetor
##========================
str(parse_logical(c("TRUE", "FALSE", "NA")))
str(parse_integer(c("1", "2", "3")))
str(parse_date(c("2010-01-01", "1979-10-14")))
parse_integer(c("1", "231", ".", "456"), na = ".")
x <- parse_integer(c("123", "231", "abc", "456.77"))
x
problems(x)
#Análise de problemas no parse
problems(x)
source("~/GitHub/rDS/r4ds/rds_cap08_data_readr.R", echo=TRUE)
#Parse de números
#Marca de decimal
parse_double("1.23")
parse_double("1,23", locale = locale(decimal_mark = ","))
#Caracteres ao redor (cifrões, percentuais, texto)
parse_number("$100")
parse_number("USD1")
parse_number("R$26700")
parse_number("It cost $123.45")
parse_number("$123,456,789")
parse_number("123.456.789",
locale = locale(grouping_mark = "."))
#Switzerland
parse_number("123'456'789",
locale = locale(grouping_mark = "'"))
##Parse de strings
##========================
#Como a string é representada internamente
charToRaw("Hadley")
#Exemplos de caracteres diferentes
x1 <- "El Ni\xf1o was particularly bad this year"
print(x1)
parse_character(x1, locale = locale(encoding = "Latin1"))
x2 <- "\x82\x81\x82\xf1\x82\xc9\x82\xbf\x82\xcd"
print(x2)
parse_character(x2, locale = locale(encoding = "Shift-JIS"))
x2 <- "\x82\xb1\x82\xf1\x82\xc9\x82\xbf\x82\xcd"
print(x2)
parse_character(x2, locale = locale(encoding = "Shift-JIS"))
#Descobrir codificação quando você desconhece
guess_encoding(charToRaw(x1))
guess_encoding(charToRaw(x2))
source("~/GitHub/rDS/r4ds/rds_cap08_data_readr.R", echo=TRUE)
5000-1500
3500-500
4383-1000
4612/24
