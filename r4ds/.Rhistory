x <- c("one", "two", "three", "four", "five")
x
x[c(3, 2, 5)]
x[c(1,1,5,5,5,2)]
source("D:/GitHub/rDS/r4ds/rds_cap16_vetores.R", echo=TRUE)
#Eliminação por posição
x[c(-1,-3,-5)]
#Filtro lógico
x <- c(10,3,NA,5,8,1,NA)
x[!is.na(x)]
x[x %% 2 == 0]
#Filtro em vetor nomeado
x <- c(abc = 1, def = 2, xyz = 3)
x[c("xyz", "def")]
x["abc"]
x <- list(1,2,3)
x
str(x)
x_named <- list(a = 1, b = 2, c = 3)
x_named
str(x_named)
#Valores heterogêneos
y <- list("a", 1L, 1.5, TRUE)
y
str(y)
#Lista de listas
z <- list(list(1,2),
list(3,4))
str(z)
z
a <- list(a = 1:3,
b = "a string",
c = pi,
d = list(1,-5))
str(a)
#Subconjuntos de listas
#Sublista
str(a[1:2])
str(a[4])
str(a[3])
y
#Componente único [[ -> Remove um nível de hierarquia
str(y[[1]])
str(y[[4]])
str(a[[1]])
str(a[[4]])
#Elementos nomeados $ -> funciona como [[ sem aspas
a$a
x_named$c
a[["a"]]
#Elementos nomeados $ -> funciona como [[ sem aspas
a$a
a[["a"]]
x_named$c
x_named[["c"]]
str(a[[4]])
str(a[[[1]]])
str(a[[4]])
str(a[[4]][[1]])
str(a[[4]][[2]])
source("D:/GitHub/rDS/r4ds/rds_cap16_vetores.R", echo=TRUE)
a$d
str(a$d)
str(a$d[[2]])
#Atributos
x <- 1:10
str(x)
attr(x, "greeting")
x
attr(x, "greeting") <- "Hi!"
x
attr(x, "farewell") <- "Bye"
attributes(x)
str(x)
as.Date
methods("as.Date")
getS3method("as.Date", "Default")
getS3method("as.Date", "default")
#Fatores
x <- factors(c("ab", "cd", "ab"),
levels = c("ab", "cd", "ef"))
typeof(x)
attributes(x)
#Fatores
x <- factor(c("ab", "cd", "ab"),
levels = c("ab", "cd", "ef"))
typeof(x)
attributes(x)
x
#Datas e horas
x <- as.Date("1971-01-01")
x
unclass(x)
typeof(x)
attributes(x)
source("D:/GitHub/rDS/r4ds/rds_cap16_vetores.R", echo=TRUE)
#Data e hora
x <- ymd_hm("1970-01-01 01:00")
#Data e hora
x <- lubridate::ymd_hm("1970-01-01 01:00")
unclass(x)
typeof(x)
attributes(x)
x
attr(x, "tzone") <- "US/Pacific"
x
attr(x, "tzone") <- "America/Sao_Paulo"
x
y <- as.POSIXlt(x)
y
typeof(y)
attributes(y)
#Convertendo de volta de lt para data normal
lubridate::as_datetime(y)
#Convertendo de volta de lt para data normal
lubridate::as_date_time(y)
#Convertendo de volta de lt para data normal
lubridate::as_datetime(y)
##Tibbles
tb <- tibble::tibble(x = 1:5,
y = 5:1)
tb
typeof(tb)
attributes(tb)
##Data frame
df <- data.frame(x = 1:5,
y = 5:1)
df
typeof(df)
attributes(df)
#Function is C structure
#Analysis of a R function
f <- function() {}
typeof(f)
is.function(f)
#Analysis of a primitive function
typeof(sum)
is.function(sum)
is.primitive(sum)
is.primitive(f)
is.object(f)
is.object(sum)
library(pryr)
letters
df <- data.frame(x = 1:10, y = letters[1:10])
is.object(df)
isS4(df)
is.object(df) & !isS4(df)
otype(df)
otype(df$x)
otype(df$y)
mean
ftype(mean)
sum
ftype(sum)
cbind
ftype(cbind)
methods("mean")
methods("t.test")
#Creating S3 class
foo <- structure(list(), class = "foo")
cl <- list()
class(cl) <- "cl"
class(foo)
inherits(foo, "foo")
inherits(foo, "cl")
class(cl)
inherits(cl, "cl")
inherits(cl, "foo")
#Class constructor
foo <- function(x) {
if (!is.numeric(x)) stop("X must be numeric")
structure(list(x), class = "foo")
}
#Methods and generic
f <- function(x) UseMethod("f")
f
f.a <- function(x) "Class a"
a <- structure(list(), class = "a")
class(a)
f(a)
mean.a <- function(x) "a"
mean(a)
#Method dispatch
f <- function(x) UseMethod("f")
f.a <- function(x) "Class a"
f.default <- function(x) "Unknown class"
#Using with a known class
f(structure(list(), class = "a"))
# No method for b class, so uses method for a class
f(structure(list(), class = c("b", "a")))
# No method for c class, so falls back to default
f(structure(list(), class = "c"))
serie <- structure(list(), class = "serie")
serie <- function(x) {
if (!is.numeric(x)) stop("The serie must be numeric")
structure(list(x), class = "serie")
}
s <- serie(c(1,2,3))
ns <- serie(c("a", "b", "c"))
media <- function(x) UseMethod("media")
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
media <- function(x) UseMethod("media")
class(media)
#Example
serie <- structure(list(), class = "serie")
serie <- function(x) {
if (!is.numeric(x)) stop("The serie must be numeric")
structure(list(x), class = "serie")
}
s <- serie(c(1,2,3))
ns <- serie(c("a", "b", "c"))
media <- function(x) UseMethod("media")
class(media)
s
View(s)
class(s)
typeof(s)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
media <- function(x) UseMethod("media")
class(media)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
#Test for numeric rule
ns <- pop(c("a", "b", "c"))
p
length(p)
p[[1]]
length(p[[1]])
sum(p[[1]])
media.pop <- fuction(x) {
media.pop <- fuction(x) {
media.pop <- fuction(x) {
media.pop <- function(x) {
sum(x[[1]])/length(x[[1]])
}
media(p)
media(c(1,2,3))
p <- pop(c(1,2,3))
class(p)
typeof(p)
media.amo <- function(x) {
sum(x[[1]])/((length(x[[1]]))-1)
}
amo <- structure(list(), class = "amo")
amo <- function(x) {
if (!is.numeric(x)) stop("X must be numeric")
structure(list(x), class = "amo")
}
a <- amo(c(1,2,3))
media(a)
media(p)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
media.default <- function(x) {
sum(x[[1]])/length(x[[1]])
}
#Apply classes and methods
p <- pop(c(1,2,3))
class(p)
typeof(p)
a <- amo(c(1,2,3))
class(a)
typeof(a)
media(p)
media(a)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
variancia <- function(x) UseMethod("variancia")
variancia.pop <- function(x) "Variancia da populução usa n"
variancia.amo <- function(x) "Variancia da amostra usa n-1"
variancia(p)
variancia(a)
variancia.pop <- function(x) "Variância da populução usa n"
variancia.amo <- function(x) "Variância da amostra usa n-1"
variancia(p)
variancia(a)
media(c(1,2))
media(c(1,2,3,4))
class(c(1,2,3))
sum(c(1,2,3))
media.numeric <- function(x) {
sum(x) / length(x)
}
media(c(1,2,3))
variancia(c(1,2,3))
variancia.default <- function(x) "Classe desconhecida"
variancia(c(1,2,3))
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
class(media.pop)
class(variancia.amo())
class(variancia.amo())
class(variancia.amo)
#Apply classes and methods
p <- pop(c(1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39))
class(p)
typeof(p)
sample(p[[1]],3)
a <- amo(sample(p[[1]],3))
class(a)
typeof(a)
p
a
media(p)
media(a)
media(c(1,2,3))
media(c(5,13,25))
media(c(5,13,25))
variancia(p)
variancia(a)
variancia(c(1,2,3))
?var
diff(c(1,2,3))
a
a[[1]]
dif(a[[1]])
diff(a[[1]])
diff(a[[1]])^2
8*8
12*12
sum(diff[[1]]^2)
sum(diff(a[[1]]^2)
sum(diff(a[[1]]^2))
sum(diff(a[[1]])^2)
sum(diff(a[[1]])^2)/length(a[[1]])
var(a[[1]])
sum(diff(a[[1]])^2)/(length(a[[1]])-1)
var(a[[1]])
a
a[[1]]
diff(a[[1]])
diff(a[[1]])^2
sum(diff(a[[1]])^2)
sum(diff(a[[1]])^2)/(length(a[[1]])-1)
var(p[[1]])
sum(diff(p[[1]])^2)/(length(p[[1]])-1)
var(p[[1]])
p[[1]]
sum(diff(p[[1]])^2)/(length(p[[1]])-1)
sum(diff(p[[1]])^2)
sum(diff(p[[1]]))
diff(p[[1]])
p[[1]]
diff(p[[1]])
var(p[[1]])
diff(p[[1]])^2
p[[1]]
var(p[[1]])
var(c(1,2,3))
var(c(p[[1]]))
diff(p[[1]])^2
sum(diff(p[[1]])^2)
sum(diff(p[[1]])^2)/(length(p[[1]]))
p[[1]]
c(p[[1]])
x <- c(1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39)
var(x)
a2 <- amo(x)
a2
variancia.pop <- function(x) {
"Variância da populução usa n"
#Acrescentar código da variancia populacional
}
variancia(p)
variancia(a)
variancia.amo <- function(x) {
"Variância da amostra usa n-1"
return(sum(diff(x[[1]])^2)/(length(x[[1]])-1))
#Acrescentar código da variância amostral
}
variancia(a)
variancia(c(1,2,3))
variancia(p)
variancia.pop <- function(x) {
"Variância da populução usa n"
#Acrescentar código da variancia populacional
return(sum(diff(p[[1]])^2)/(length(p[[1]])))
}
variancia(p)
variancia(a)
variancia(c(1,2,3))
a2 <- amo(x)
a2
var(a2)
x <- c(1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39)
a2 <- amo(x)
a2
var(a2[[1]])
var(a2)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
a2
a
p
p
a2
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
a2 <- amo(c(1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39))
a2
var(a2)
variancia(a2)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
var(x)
variancia(a2)
variancia(a)
var(a[[1]])
diff(c(1,2,3))
sample(1:1000, 30)
#Apply classes and methods
p <- pop(sample(1:1000, 30))
class(p)
typeof(p)
p
a <- amo(sample(p[[1]],3))
class(a)
typeof(a)
a
media(p)
mean(p[[1]])
media(a)
mean(a[[1]])
media(c(1,2,3))
media(c(5,13,25))
variancia(p)
var(p[[1]])
variancia(a)
var(a[[1]])
variancia(c(1,2,3))
var(a[[1]])
a2 <- amo(p[[1]])
a2
var(x)
variancia(a2)
var(p[[1]])
variancia(a2)
a
dif(a[[1]])
diff(a[[1]])
diff(a[[1]])^2
181476+79524
261000/2
variancia(2)
variancia(a)
261000/3
var(a[[1]])
pesos <- c(2.64, 2.38, 2.30, 2.69, 2.32, 2.66, 2.36, 2.70, 2.49, 1.56,
2.33, 2.26, 2.15, 2.45, 2.02, 2.73, 3.09, 2.47, 2.44, 2.79)
mean(pesos)
media(pesos)
var(pesos)
variancia(pesos)
pesos_a <- amo(pesos)
pesos_a
media(pesos_a)
variancia(pesos_a)
pesos_p <- pop(pesos)
pesos_p
variancia(pesos_p)
length(pesos)
length(pesos_p[[1]])
length(pesos_p[[1]])-1
diff(pesos)
diff(pesos)^2
2.64-2.38
0.26^2
-0.26^2
?diff
diff(pesos)*-1
(diff(pesos)*-1)^2
sum((diff(pesos)*-1)^2)
sum((diff(pesos)*-1)^2)/(length(pesos)-1)
pesos
pesos - 1
pesos - media(pesos)
(pesos - media(pesos))^2
sum((pesos - media(pesos))^2)
sum((pesos - media(pesos))^2)/length(pesos)
sum((pesos - media(pesos))^2)/(length(pesos)-1)
variancia.amo <- function(x) {
"Variância da amostra usa n-1"
#Acrescentar código da variância amostral
sum((x[[1]] - media(x))^2)/(length(x[[1]])-1)
}
variancia(a)
variancia(c(1,2,3))
var(a[[1]])
var(pesos)
variancia(pesos)
pesos_a <- amo(pesos)
pesos_a
media(pesos_a)
variancia(pesos_a)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
var(pesos_a[[1]])
variancia(pesos_a)
pesos_a
var(pesos_a[[1]])
variancia(pesos_a)
pesos_p
var(pesos_p[[1]])
variancia(pesos_p)
