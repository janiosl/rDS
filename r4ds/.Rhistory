}
media(p)
media(c(1,2,3))
p <- pop(c(1,2,3))
class(p)
typeof(p)
media.amo <- function(x) {
sum(x[[1]])/((length(x[[1]]))-1)
}
amo <- structure(list(), class = "amo")
amo <- function(x) {
if (!is.numeric(x)) stop("X must be numeric")
structure(list(x), class = "amo")
}
a <- amo(c(1,2,3))
media(a)
media(p)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
media.default <- function(x) {
sum(x[[1]])/length(x[[1]])
}
#Apply classes and methods
p <- pop(c(1,2,3))
class(p)
typeof(p)
a <- amo(c(1,2,3))
class(a)
typeof(a)
media(p)
media(a)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
variancia <- function(x) UseMethod("variancia")
variancia.pop <- function(x) "Variancia da populução usa n"
variancia.amo <- function(x) "Variancia da amostra usa n-1"
variancia(p)
variancia(a)
variancia.pop <- function(x) "Variância da populução usa n"
variancia.amo <- function(x) "Variância da amostra usa n-1"
variancia(p)
variancia(a)
media(c(1,2))
media(c(1,2,3,4))
class(c(1,2,3))
sum(c(1,2,3))
media.numeric <- function(x) {
sum(x) / length(x)
}
media(c(1,2,3))
variancia(c(1,2,3))
variancia.default <- function(x) "Classe desconhecida"
variancia(c(1,2,3))
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
class(media.pop)
class(variancia.amo())
class(variancia.amo())
class(variancia.amo)
#Apply classes and methods
p <- pop(c(1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39))
class(p)
typeof(p)
sample(p[[1]],3)
a <- amo(sample(p[[1]],3))
class(a)
typeof(a)
p
a
media(p)
media(a)
media(c(1,2,3))
media(c(5,13,25))
media(c(5,13,25))
variancia(p)
variancia(a)
variancia(c(1,2,3))
?var
diff(c(1,2,3))
a
a[[1]]
dif(a[[1]])
diff(a[[1]])
diff(a[[1]])^2
8*8
12*12
sum(diff[[1]]^2)
sum(diff(a[[1]]^2)
sum(diff(a[[1]]^2))
sum(diff(a[[1]])^2)
sum(diff(a[[1]])^2)/length(a[[1]])
var(a[[1]])
sum(diff(a[[1]])^2)/(length(a[[1]])-1)
var(a[[1]])
a
a[[1]]
diff(a[[1]])
diff(a[[1]])^2
sum(diff(a[[1]])^2)
sum(diff(a[[1]])^2)/(length(a[[1]])-1)
var(p[[1]])
sum(diff(p[[1]])^2)/(length(p[[1]])-1)
var(p[[1]])
p[[1]]
sum(diff(p[[1]])^2)/(length(p[[1]])-1)
sum(diff(p[[1]])^2)
sum(diff(p[[1]]))
diff(p[[1]])
p[[1]]
diff(p[[1]])
var(p[[1]])
diff(p[[1]])^2
p[[1]]
var(p[[1]])
var(c(1,2,3))
var(c(p[[1]]))
diff(p[[1]])^2
sum(diff(p[[1]])^2)
sum(diff(p[[1]])^2)/(length(p[[1]]))
p[[1]]
c(p[[1]])
x <- c(1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39)
var(x)
a2 <- amo(x)
a2
variancia.pop <- function(x) {
"Variância da populução usa n"
#Acrescentar código da variancia populacional
}
variancia(p)
variancia(a)
variancia.amo <- function(x) {
"Variância da amostra usa n-1"
return(sum(diff(x[[1]])^2)/(length(x[[1]])-1))
#Acrescentar código da variância amostral
}
variancia(a)
variancia(c(1,2,3))
variancia(p)
variancia.pop <- function(x) {
"Variância da populução usa n"
#Acrescentar código da variancia populacional
return(sum(diff(p[[1]])^2)/(length(p[[1]])))
}
variancia(p)
variancia(a)
variancia(c(1,2,3))
a2 <- amo(x)
a2
var(a2)
x <- c(1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39)
a2 <- amo(x)
a2
var(a2[[1]])
var(a2)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
a2
a
p
p
a2
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
a2 <- amo(c(1,2,3,4,5,6,7,8,9,
10,11,12,13,14,15,16,17,18,19,
20,21,22,23,24,25,26,27,28,29,
30,31,32,33,34,35,36,37,38,39))
a2
var(a2)
variancia(a2)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
var(x)
variancia(a2)
variancia(a)
var(a[[1]])
diff(c(1,2,3))
sample(1:1000, 30)
#Apply classes and methods
p <- pop(sample(1:1000, 30))
class(p)
typeof(p)
p
a <- amo(sample(p[[1]],3))
class(a)
typeof(a)
a
media(p)
mean(p[[1]])
media(a)
mean(a[[1]])
media(c(1,2,3))
media(c(5,13,25))
variancia(p)
var(p[[1]])
variancia(a)
var(a[[1]])
variancia(c(1,2,3))
var(a[[1]])
a2 <- amo(p[[1]])
a2
var(x)
variancia(a2)
var(p[[1]])
variancia(a2)
a
dif(a[[1]])
diff(a[[1]])
diff(a[[1]])^2
181476+79524
261000/2
variancia(2)
variancia(a)
261000/3
var(a[[1]])
pesos <- c(2.64, 2.38, 2.30, 2.69, 2.32, 2.66, 2.36, 2.70, 2.49, 1.56,
2.33, 2.26, 2.15, 2.45, 2.02, 2.73, 3.09, 2.47, 2.44, 2.79)
mean(pesos)
media(pesos)
var(pesos)
variancia(pesos)
pesos_a <- amo(pesos)
pesos_a
media(pesos_a)
variancia(pesos_a)
pesos_p <- pop(pesos)
pesos_p
variancia(pesos_p)
length(pesos)
length(pesos_p[[1]])
length(pesos_p[[1]])-1
diff(pesos)
diff(pesos)^2
2.64-2.38
0.26^2
-0.26^2
?diff
diff(pesos)*-1
(diff(pesos)*-1)^2
sum((diff(pesos)*-1)^2)
sum((diff(pesos)*-1)^2)/(length(pesos)-1)
pesos
pesos - 1
pesos - media(pesos)
(pesos - media(pesos))^2
sum((pesos - media(pesos))^2)
sum((pesos - media(pesos))^2)/length(pesos)
sum((pesos - media(pesos))^2)/(length(pesos)-1)
variancia.amo <- function(x) {
"Variância da amostra usa n-1"
#Acrescentar código da variância amostral
sum((x[[1]] - media(x))^2)/(length(x[[1]])-1)
}
variancia(a)
variancia(c(1,2,3))
var(a[[1]])
var(pesos)
variancia(pesos)
pesos_a <- amo(pesos)
pesos_a
media(pesos_a)
variancia(pesos_a)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
var(pesos_a[[1]])
variancia(pesos_a)
pesos_a
var(pesos_a[[1]])
variancia(pesos_a)
pesos_p
var(pesos_p[[1]])
variancia(pesos_p)
source("D:/GitHub/rDS/r4ds/rds_cap16_extra_poo.R", echo=TRUE)
#Recognising S4 Objects
library(stats4)
y <- c(26, 17, 13, 12, 20, 5, 9, 8, 5, 4, 8)
nLL <- function(lambda) - sum(dpois(y, lambda, log = TRUE))
fit <- mle(nLL, start = list(lambda = 5), nobs = length(y))
isS4(fti)
isS4(fit)
typeof(fit)
otype(fit)
# S4 generic
isS4(nobs)
nobs
ftype(nobs)
ftype(nobs)
is(fit)
is(fit, "mle")
#Defining classes and creating objects
setClass("Person",
slots = list(name = "character", age = "numeric"))
setClass("Employee",
slots = list(boss = "Person"),
contains = "Person")
alice <- new("Person", name = "Alice", age = 40)
john <- new("Employee", name = "John", age = 20, boss = alice)
alice
john
alice@age
slot(john, "boss")
#S4 object that contains (inherits from) an S3 class or a base type
setClass("RangedNumeric",
contains = "numeric",
slots = list(min = "numeric", max = "numeric"))
rn <- new("RangedNumeric", 1:10, min = 1, max = 10)
rn@min
rn@.Data
#Creating new methods and generics
setGeneric("union")
setMethod("union",
c(x = "data.frame", y = "data.frame"),
function(x, y) {
unique(rbind(x, y))
}
)
# From methods: takes generic name and class names
selectMethod("nobs", list("mle"))
# From pryr: takes an unevaluated function call
method_from_call(nobs(fit))
source("D:/GitHub/rDS/r4ds/rds_cap17_loops_purrr.R", echo=TRUE)
map_dbl(df, mean)
map_dbl(df, median)
#Map usando pipe
df %>% map_dbl(mean)
df %>% map_dbl(median)
df %>% map_dbl(sd)
log(10)
#Tratamento de falhas
safe_log <- safely(log)
safe_log(10)
safe_log("a")
x <- list(1, 10, "a")
y <- x %>% map(safely(log(x)))
str(y)
y <- x %>% map(safely(log))
str(y)
#Separação dos resultados
y <- y %>% transpose()
str(y)
y$result
y$result
source("D:/GitHub/rDS/r4ds/rds_cap17_loops_purrr.R", echo=TRUE)
library(tidyverse)
library(lubridate)
library(nycflights13)
#Obtenção de componentes internos
datetime <- ymd_hms(now())
datetime
#Ano e mÊs
year(datetime)
month(datetime)
#Configuração/alteração de componentes
datetime
year(datetime) <- 1981
month(datetime) <- 1
day(datetime) <- 31
hour(datetime) <- 15
minute(datetime) <- 0
second(datetime) <- 0
datetime
wday(datetime, label = TRUE, abbr = FALSE)
new_datetime <- update(datetime, year = 2007, month = 12, mday = 20,
hour = 20, minute = 0, second = 0)
new_datetime
#Atraso por minutos de cada hora - agendamento decolagem
flights_dt %>%
mutate(minute = minute(sched_dep_time)) %>%
group_by(minute) %>%
summarize(
avg_delay = mean(arr_delay, na.rm = TRUE),
n = n()
) %>%
#ggplot(aes(minute, avg_delay)) + #Atraso médio
ggplot(aes(minute, n)) + #Quantidade
geom_line()
library(tidyverse)
library(lubridate)
library(nycflights13)
#Obtenção de componentes internos
datetime <- ymd_hms(now())
datetime
#Ano e mÊs
year(datetime)
month(datetime)
#Dias
mday(datetime) #Dia do mês
yday(datetime) #Dia do ano
wday(datetime) #Dia da semana
#Retorno textual
month(datetime, label = TRUE)
month(datetime, label = TRUE, abbr = FALSE)
wday(datetime, label = TRUE)
wday(datetime, label = TRUE, abbr = FALSE)
#Retomada do dataset do estudo anterior
make_datetime_100 <- function(year, month, day, time) {
make_datetime(year, month, day,
time %/% 100, #Parte inteira da divisão por 100
time %% 100) #Resto da divisão por 100
}
flights_dt <- flights %>%
filter(!is.na(dep_time), !is.na(arr_time)) %>%
mutate(
dep_time = make_datetime_100(year, month, day, dep_time),
arr_time = make_datetime_100(year, month, day, arr_time),
sched_dep_time = make_datetime_100(year, month, day, sched_dep_time),
sched_arr_time = make_datetime_100(year, month, day, sched_arr_time),
) %>%
select(origin, dest, ends_with("delay"), ends_with("time"))
flights_dt
#Voos por dia da semana
flights_dt %>%
mutate(wday = wday(dep_time, label = TRUE)) %>%
ggplot(aes(x = wday)) +
geom_bar()
#Atraso por minutos de cada hora - decolagem
flights_dt %>%
mutate(minute = minute(dep_time)) %>%
group_by(minute) %>%
summarize(
avg_delay = mean(arr_delay, na.rm = TRUE),
n = n()
) %>%
ggplot(aes(minute, avg_delay)) +
geom_line()
source("D:/GitHub/rDS/r4ds/rds_cap17_loops_purrr.R", echo=TRUE)
source("D:/GitHub/rDS/r4ds/rds_cap17_loops_purrr.R", echo=TRUE)
#Possibly
x <- list(1, 10, "a")
x %>% map_dbl(possibly(log, NA_real_))
#Quietly
x <- list(1, -1)
x %>% map(quietly(log)) %>% str()
log(x)
mu <- list(5, 10, -3)
mu %>%
map(rnorm, n = 5) %>%
str()
#Variando média e desvio padrão
sigma <- list(1,5,10)
map2(mu, sigma, rnorm, n = 5)
#Variando mais argumentos com pmap
n <- list(1,3,5)
argsl <- list(n,mu,sigma)
argsl
argsl %>%
pmap(rnorm) %>%
str()
args1 <- list(n,mu,sigma)
args1
args1 %>%
pmap(rnorm) %>%
str()
#Nomeando argumentos
args2 <- lsit(mean = mu, sd = sigma, n = n)
#Nomeando argumentos
args2 <- list(mean = mu, sd = sigma, n = n)
args2
source("D:/GitHub/rDS/r4ds/rds_cap17_loops_purrr.R", echo=TRUE)
args2 %>%
pmap(rnorm) %>%
str()
#Usando data frame
params <- tribble(
~mean, ~sd, ñ,
#-----/----/-----
5, 1, 1,
10, 5, 3,
-3, 10, 5
)
#Usando data frame
params <- tribble(
~mean, ~sd, ~n,
#-----/----/-----
5, 1, 1,
10, 5, 3,
-3, 10, 5
)
params
params %>%
pmap(rnom)
source("D:/GitHub/rDS/r4ds/rds_cap17_loops_purrr.R", echo=TRUE)
View(params)
View(params)
f <- c("runif", "rnorm", "rpois")
param <- list(
list(min = -1, max = 1),
list(sd = 5),
list(lambda = 10)
)
f
param
invoke_map(f, param, n = 5) %>% str()
#Organizando funções e argumentos
sim <- tribble(
~f, ~param,
#---/------
"runif", list(min = -1, max =1),
"rnorm", list(sd = 5),
"rpois", list(lambda = 10)
)
sim
sim %>%
mutate(sim = invoke_map(f, params, n = 10))
sim %>%
mutate(sim = invoke_map(f, param, n = 10))
View(sim)
